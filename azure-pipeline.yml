# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'HexGrid.sln'
  buildConfiguration: 'Release'
  # majorVersion: '0'
  # minorVersion: '2'
  # patchVersion: '0'

steps:
# - script: "echo ##vso[build.updatebuildnumber]$(majorVersion).$(minorVersion).$(patchVersion).$(build.buildId)"
- script: "echo buildNumber $(build.buildNumber)"
- script: "echo DefinitionVersion $(Build.DefinitionVersion)"

- task: PowerShell@2
  displayName: Show change script and check for schema changes
  inputs:
    targetType: 'inline'
    script: |
      $xml = [Xml] (Get-Content .\MyApp.csproj)
      Write-Host "##vso[build.updatebuildnumber]$xml.Project.PropertyGroup.Version

- script: "echo new buildNumber $(build.buildNumber)"

# - task: NuGetCommand@2
#   displayName: 'Restore project dependencies'
#   inputs:
#     command: 'restore'
#     restoreSolution: $(solution)

# - task: DotNetCoreCLI@2
#   displayName: 'Build the project - HexGrid'
#   inputs:
#     command: 'build'
#     projects: $(solution)
#     arguments: '--no-restore --configuration $(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   displayName: 'Test the project'
#   inputs:
#     command: 'test'
#     projects: $(solution)
#     arguments: '--no-build --configuration $(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   displayName: 'Pack the project'
#   inputs:
#     command: 'pack'
#     projects: $(solution)
#     arguments: '--no-build --configuration $(buildConfiguration)'
#     versioningScheme: byBuildNumber

# - task: NuGetCommand@2
#   displayName: 'Publish NuGet package'
#   inputs:
#     command: push
#     publishVstsFeed: 'CryHavocPoc/CryHavocExternalPackage'
#     allowPackageConflicts: true
#   condition: succeeded()
